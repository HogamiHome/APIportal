{"version":3,"sources":["components/about.js","components/apis-list.js","components/copyright.js","components/modal.js","components/navbar.js","components/portal.js","components/portfolio.js","App.js","index.js"],"names":["About","className","id","href","src","alt","download","modals","describtion","type","dbmodel","title","Copyright","Date","getFullYear","Modal","current","close","useState","display","setDisplay","tabIndex","style","overflow","onClick","apiDefintion","url","NavBar","active","setActive","useEffect","listner","window","scrollY","document","addEventListener","removeEventListener","offset","Portal","width","borderRadius","Portfolio","map","item","icon","image","withRouter","history","match","openModal","setOpenModal","find","location","hash","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.38e2a897.chunk.js","sourcesContent":["export default function About() {\n    return (\n    <section className=\"bg-primary text-white mb-0\" id=\"about\">\n    <div className=\"container\">\n        <h2 className=\"text-center text-uppercase text-white\">\n        Database Model Hogami\n        </h2>\n        <hr className=\"star-light mb-5\" />\n        <div className=\"row\">\n        <a className=\"portfolio-item d-block mx-auto\" href=\"#agrandarFoto\">\n            <img\n            className=\"imagenDatos\"\n            src=\"assets/img/portfolio/base-de-datos.png\"\n            alt=\"about\"\n            />\n        </a>\n        </div>\n        <div className=\"text-center mt-4\">\n        <a\n            className=\"btn btn-xl btn-outline-light\"\n            href=\"assets/img/portfolio/todo.png\"\n            download=\"completeDataBase\"\n        >\n            <i className=\"fa fa-download mr-2\" />\n            Descarga\n        </a>\n        </div>\n    </div>\n    </section>\n    )\n}","const modals = [\n    {\n        \"id\": \"matching\",\n        \"title\": \"Matching\",\n        \"image\": \"assets/img/portfolio/trabajo.png\",\n        \"dbmodel\": null,\n        \"apiDefintion\": \"assets/js/matching.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Matching API provides the results of the matching process between offer\n                and demand. Starting with the request from a Client characterized by 2\n                parameters:\n            </p>\n            <ol>\n                <li> A service level 3, included the \"Others\" label;</li>\n                <li> A specific place identified by the Postal Code.</li>\n            </ol>\n            Once the request is placed to the Platform, it returns as a result, a list of\n            Professionals who matched the 2 parameters:\n            <ol>\n                <li> Skills to execute the service;</li>\n                <li> Offering the services at the Postal Code. </li>\n            </ol>\n            An excluding condition for the Professional , is to be active at the moment of\n            the request. The results showed by the API Search are sorted using different\n            algorithms. The use of different algorithms allows the testing to choose the\n            best alternative.\n            <p />\n        </div>)\n    },\n    {\n        \"id\": \"professional\",\n        \"title\": \"Professional\",\n        \"image\": \"assets/img/portfolio/dyer.png\",\n        \"dbmodel\": \"assets/img/portfolio/professional.png\",\n        \"apiDefintion\": \"assets/js/professional.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Professional API gives the information identifying the Professional,\n                based on the details provided by the Professional and the Platform. Those\n                one give by the Professional:\n            </p>\n            <ol type=\"a\">\n                <li>Who (their ID, name, address, etc.);</li>\n                <li>Where (places where they operate identified by the Postal Code); </li>\n                <li>What (which services they offer, their skills); </li>\n                <li>Additional information (legal, fiscal, complementary information);</li>\n                <li>Activity status (active, on hold) </li>\n            </ol>\n            Also manages the complementary information gathered by the Platform. After the\n            curation process made by the Platform, a final status is indicated as\n            Validated or Not Validated. Once the Professional is registered, the API\n            Professional manages the login credentials for the Professional (user,\n            password). The microservice deals with the different status (change,\n            recover,..) The Professional has access to their Jobs published in their\n            private space.\n            <p />\n            <br />\n        </div>)\n    },\n    {\n        \"id\": \"Client\",\n        \"title\": \"Client\",\n        \"dbmodel\": \"assets/img/portfolio/client.png\",\n        \"image\": \"assets/img/portfolio/familia.png\",\n        \"apiDefintion\": \"assets/js/client.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Client API provides the information identifying the Client, based on the\n                information provided by him in 2 different steps:\n            </p>\n            <ol type=\"a\">\n                <dt>\"Light Register\":</dt>\n                <dd>\n                    email, name, telephone (optional). This step allows the Client to start\n                    Chatting with the Professionals.{\" \"}\n                </dd>\n                <dt>Register: </dt>\n                <dd>\n                    {\" \"}\n                    Who (who is he Client, ID, address…); Where (specific address, the Postal\n                    Code is mandatory);{\" \"}\n                </dd>\n                <dt> Additional information (legal, fiscal, complementary information).</dt>\n            </ol>\n            Once the Client is registered, the API Client manages their login credentials\n            (user, password). The microservice deals with different status (change,\n            recover). The Clients has access to their Jobs published in their private\n            space.\n            <p />\n            <br />\n        </div>\n        )\n    },\n    {\n        \"id\": \"Payment\",\n        \"title\": \"Payment\",\n        \"dbmodel\": \"assets/img/portfolio/payment.png\",\n        \"image\": \"assets/img/portfolio/dinero.png\",\n        \"apiDefintion\": \"assets/js/payment.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The API Payment provides information about the Charges and Payments. The\n                Charges flows are sent from the Client to the PSP, and the Payments flows\n                came from the PSP to the Professional. The PSP includes the flows sent to\n                the escrow accounts. The Charges are split in 3 amounts:\n            </p>\n            <ol type=\"a\">\n                <li>the PSP´s commission;</li>\n                <li>\n                    the Platform commission over the price of the Job excluding the products;\n                </li>\n                <li>the Payment to the Professional.</li>\n            </ol>\n            The Payment is calculated taking out the commissions and taxes from the\n            Charges, and the PSP commission is assumed by the Platform.\n            <p />\n            <br />\n        </div>\n\n        )\n    },\n    {\n        \"id\": \"Notification\",\n        \"title\": \"Notification\",\n        \"image\": \"assets/img/portfolio/email.png\",\n        dbmodel: \"assets/img/portfolio/notification.png\",\n        \"apiDefintion\": \"assets/js/notification.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Matching API provides the results of the matching process between offer\n                and demand. Starting with the request from a Client characterized by 2\n                parameters:\n            </p>\n            <ol>\n                <li> A service level 3, included the \"Others\" label;</li>\n                <li> A specific place identified by the Postal Code.</li>\n            </ol>\n            Once the request is placed to the Platform, it returns as a result, a list of\n            Professionals who matched the 2 parameters:\n            <ol>\n                <li> Skills to execute the service;</li>\n                <li> Offering the services at the Postal Code. </li>\n            </ol>\n            An excluding condition for the Professional , is to be active at the moment of\n            the request. The results showed by the API Search are sorted using different\n            algorithms. The use of different algorithms allows the testing to choose the\n            best alternative.\n            <p />\n        </div>)\n    },\n    {\n        \"id\": \"Operation\",\n        \"title\": \"Operation\",\n        dbmodel: \"assets/img/portfolio/operation.png\",\n        \"image\": \"assets/img/portfolio/llave-inglesa.png\",\n        \"apiDefintion\": \"assets/js/operation.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Operation API provides the Job details. Once the Client has agreed with\n                the Professional on the Service to be done, the price, the place and the\n                date (day and hour), a Job is created for the Client and the Professional,\n                using the precedent variables. At this moment a first Charge will be done to\n                the Client. As the Job progress, more variables are created: checking the\n                Professional arrival (day &amp; hour) ; picture “before”; final date (day\n                &amp; hour); picture “after”; final price; Professional closing the Job;\n                Client confirming (OK / KO) ; detail of services done; detail of products\n                included. The Operation API gives a unique register for the Job created from\n                the moment when the Client and the Professional agreed on a Job. During the\n                Job execution additional Services and Products can be added.\n            </p>\n            <br />\n        </div>\n        )\n    },\n    {\n        \"id\": \"request\",\n        \"title\": \"Request Service\",\n        dbmodel: \"assets/img/portfolio/request.png\",\n        \"image\": \"assets/img/portfolio/signo-de-interrogacion.png\",\n        \"apiDefintion\": \"assets/js/request.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Request API provides the informations related to the exchanges between\n                the Client and the Professional in the Chat. These exchanges start at the\n                moment that the Client and Professional start a new convertation in the\n                Chat, until they agree to open a Job, or unlike they finish the exchanges.\n                All the exchanges are stored. In this microservice the Client and the\n                Professional agree on the details of the future Job: service, price, place,\n                date (day &amp; hour)\n            </p>\n            <br />\n        </div>\n        )\n    },\n    {\n        \"id\": \"identity\",\n        \"title\": \"Identity Server\",\n        dbmodel: \"assets/img/portfolio/user.png\",\n        \"image\": \"assets/img/portfolio/contrasena.png\",\n        \"apiDefintion\": \"assets/js/identityServer.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Identity Server API deals with the permissions logic to the API conexions.\n                It manages the credentials, tokens, permissions and roles, needed to allow the access to the APIs and the users.\n            </p>\n        </div>)\n    },\n    {\n        \"id\": \"offered\",\n        \"title\": \"Service Offer\",\n        dbmodel: \"assets/img/portfolio/offered_service.png\",\n        \"image\": \"assets/img/portfolio/rodillo-de-pintura.png\",\n        \"apiDefintion\": \"assets/js/offeredServices.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Services Offer API provides the structured offer of services provided by\n                Hogami. The Offer is structured in 3 levels:\n            </p>\n            <ol type=\"a\">\n                <li>Category (e.g., Maintenance);</li>\n                <li>Business Vertical (e.g., Handyman);</li>\n                <li>Jobs. The level 3 is the most granular detail. </li>\n            </ol>\n            It is composed with the standardized packages associated to the Business\n            Vertical. A Job could be also a non-identified standard package, identified as\n            \"Others\". A Job has always a price associated. In this case each Job declared\n            as \"Others\" will be storage with an ID. In a first stage, the information will\n            not be treated, and all the Jobs \"Others\" could be different. In a second\n            phase, an intelligent mechanism (could be a machine learning artifact), will\n            be implemented to match the differences and classify properly the \"Others\"\n            likewise.\n            <p />\n            <br />\n        </div>)\n    },\n    {\n        \"id\": \"Rating\",\n        \"title\": \"Rating\",\n        dbmodel: \"\",\n        \"image\": \"assets/img/portfolio/rating.png\",\n        \"apiDefintion\": \"assets/js/rating.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The API Rating provides the information that the Client done to the\n                Professional, and the one done by the Professional to the Client. The\n                Professional rating is public. Unlikewise, the Client rating will be kept\n                for internal use of the Platform. The rating will be performed using\n                different indicators (cleaning, punctuality,...)\n            </p>\n            <br />\n        </div>)\n    },\n    {\n        \"id\": \"chat\",\n        \"title\": \"Chat\",\n        \"image\": \"assets/img/portfolio/chat.png\",\n        \"apiDefintion\": \"assets/js/matching.json\",\n        describtion: () => (<div id=\"text\">\n            <p>\n                The Chat API has the whole capacities to manage the information contained in the exchanges between the Client and the Professional.\n                It can read the conversations, allow the Customer Service can enter in the Chat, managing the pending conversations, extract information from the database.\n            </p>\n        </div>)\n    },\n    {\n        \"id\": \"under_construction\",\n        \"icon\": \"Under Construction\",\n        title: \"Invoices\",\n        dbmodel: \"\",\n        \"image\": \"assets/img/portfolio/cono-de-trafico.png\",\n        \"apiDefintion\": \"\",\n        describtion: () => (<div id=\"text\">\n            <p>The Invoices API interacts with the microservice Invoice generator.\n                The Invoices are created with the Client and Professional fiscal informations, the Job details (services, products, prices, taxes).\n                The microservice will send the forms to the Client, to the Customer, and externally to the LM main comptable module.\n                There will be 2 invoices created:\n                <ol>\n                    <li>From the Professional to the Client;</li>\n                    <li>From the Platform to the Professional.</li>\n                </ol>\n                The invoices must be stored on line at least for 4 years after the date of service.\n            </p>\n        </div>)\n    },\n    {\n        \"id\": \"Functional_Administration\",\n        \"title\": \"Functional Administration\",\n        \"image\": \"assets/img/portfolio/headphones.png\",\n        \"apiDefintion\": \"assets/js/backoffice.json\",\n        describtion: () => (<div id=\"text\">\n            <p>The API Functional Administration provides a set of back office functionalities.\n                The main features are the following manages the Professional curation process; manages the Customer Service;\n                provides information about the Job, the status and the incidents declared by the Client or the Professional.\n                The API FA also allow to expel Professionals, change the service status in case of error and generate request with filters.\n            </p>\n        </div>)\n    },\n    {\n        \"id\": \"operation_batch\",\n        \"title\": \"Operation Batch\",\n        \"image\": \"assets/img/portfolio/cono-de-trafico.png\",\n        \"apiDefintion\": \"\",\n        describtion: () => (<div id=\"text\">\n            <p>This batch runs every 48 hours. It checks which operations are pending confirmation, and if the necessary time has passed, it gets automatically confirmed.\n            </p>\n        </div>)\n    }\n]\n\nexport default modals;","export default function Copyright() {\n    return (\n        <div className=\"copyright py-4 text-center text-white\">\n            <div className=\"container\">\n                <small>Copyright © Everis {new Date().getFullYear()}</small>\n            </div>\n        </div>\n    )\n}","import { useState } from \"react\"\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\nexport default function Modal({ current, close }) {\n    const [display, setDisplay] = useState(\"none\")\n    return (\n        <>\n        <div className=\"mfp-bg mfp-ready\" />\n        <div\n            className=\"mfp-wrap mfp-auto-cursor mfp-ready\"\n            tabIndex={-1}\n            style={{ overflow: \"hidden auto\" }}\n        >\n            <div className=\"mfp-container mfp-inline-holder\">\n                <div className=\"mfp-content\">\n                    <div className=\"portfolio-modal\" id=\"portfolio-modal-4\">\n                        <div className=\"portfolio-modal-dialog bg-white\">\n                            <span\n                                className=\"close-button d-none d-md-block portfolio-modal-dismiss\"\n                                onClick={close}\n                            >\n                                <i className=\"fa fa-3x fa-times\" />\n                            </span>\n                            <div className=\"container text-center\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-8 mx-auto\">\n                                        <h2 className=\"text-secondary text-uppercase mb-0\">\n                                            {current.title}\n                                        </h2>\n                                        <hr className=\"star-dark mb-5\" />\n                                        {current.describtion()}\n                                        <h3 className=\"text-secondary text-uppercase mb-0\">\n                                            Data Base Model\n                                        </h3>\n                                        {current.dbmodel && <img src={current.dbmodel} alt=\"database model\" />}\n                                        <br />\n                                        <br />\n                                        {current.apiDefintion &&<button\n                                            className=\"swagger btn btn-primary btn-lg rounded-pill mr-1\"\n                                            onClick={() => setDisplay(\"block\")}\n                                        >\n                                            Api Definition\n                                        </button>}\n                                        <button\n                                            className=\"btn btn-primary btn-lg rounded-pill portfolio-modal-dismiss ml-1\"\n                                            onClick={close}\n                                        >\n                                            Close\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            {current.apiDefintion && <div className=\"swagger-ui\" style={{ display: display }}>\n                                <SwaggerUI url={current.apiDefintion} />\n                            </div>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n\n    )\n}","import { useEffect, useState } from 'react'\nimport Link from 'react-anchor-link-smooth-scroll'\n\nexport default function NavBar() {\n    const [active, setActive] = useState(\"\")\n    useEffect(() => {\n        const listner = () => {\n            if (window.scrollY >= 600 && window.scrollY <= 1900) {\n                setActive(\"portfolio\")\n            } else if(window.scrollY >= 1900) {\n                setActive(\"about\")\n            }else {\n                setActive(\"\")\n            }\n        }\n        document.addEventListener(\"scroll\", listner);\n        return () => {\n            return document.removeEventListener(\"scroll\", listner, true)\n        }\n    }, [])\n    return (\n    <nav\n        className=\"navbar navbar-expand-lg bg-secondary fixed-top text-uppercase\"\n        id=\"mainNav\"\n    >\n        <div className=\"container\">\n            <a className=\"navbar-brand \" href=\"#\" >\n                <img\n                    className=\"img-fluid\"\n                    src=\"assets/img/portfolio/logo-hogami-verde.svg\"\n                    alt=\"Hogami\"\n                />\n            </a>\n            <button\n                className=\"navbar-toggler navbar-toggler-right text-uppercase bg-primary text-white rounded\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarResponsive\"\n                aria-controls=\"navbarResponsive\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n            >\n                Menu\n                <i className=\"fa fa-bars\" />\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item mx-0 mx-lg-1\">\n                        <Link\n                            className={`nav-link py-3 px-0 px-lg-3 rounded ${active ===\"portfolio\"?\"active\":\"\"}`}\n                            href=\"#portfolio\"\n                            offset='770' \n                        >\n                            Apis\n                        </Link>\n                    </li>\n                    <li className=\"nav-item mx-0 mx-lg-1\">\n                        <Link\n                            className={`nav-link py-3 px-0 px-lg-3 rounded ${active ===\"about\"?\"active\":\"\"}`}\n                            href=\"#about\"\n                            offset='200' \n                        >\n                            About\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>)\n\n}","export default function Portal() {\n    return (\n        <header className=\"masthead bg-primary text-white text-center\">\n            <div className=\"container\">\n                <img\n                    className=\"img-fluid mb-5 d-block mx-auto\"\n                    src=\"assets/img/portfolio/Dejar-casa-entre-familiares.jpg\"\n                    alt=\"portal\"\n                    style={{ width: \"20%\", borderRadius: \"50%\" }}\n                />\n                <h1 className=\"text-uppercase mb-0\">Hogami portal developer</h1>\n                <hr className=\"star-light\" />\n                <h2 className=\"font-weight-light mb-0\">\n                    Web Developer portal - Service Platform\n                </h2>\n            </div>\n        </header>\n    )\n\n}","import modals from \"./apis-list\";\n\nexport default function Portfolio() {\n    return (\n        <section className=\"portfolio\" id=\"portfolio\">\n            <div className=\"container\">\n                <h2 className=\"text-center text-uppercase text-secondary mb-0\">Apis</h2>\n                <hr className=\"star-dark mb-5\" />\n                <div className=\"row\">\n                    {modals.map(item => (\n                        <div key={item.id} className=\"col-md-6 col-lg-4\">\n                        <a className=\"portfolio-item d-block mx-auto\"  href={`#${item.id}`}>\n                            <div className=\"portfolio-item-caption d-flex position-absolute h-100 w-100\">\n                                <div className=\"portfolio-item-caption-content my-auto w-100 text-center text-white\">\n                                    {item.icon ? <i>{item.icon}</i> : <i className=\"fa fa-search-plus fa-3x\" />}\n                                </div>\n                            </div>\n                            <img className=\"img-fluid\" src={item.image} alt=\"portfolio\" />\n                        </a>\n                        <h6>{item.title}</h6>\n                    </div>\n                    ))}\n                </div>\n            </div>\n        </section>\n\n    )\n}","\nimport { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport About from \"./components/about\";\nimport modals from \"./components/apis-list\";\nimport Copyright from \"./components/copyright\";\nimport Modal from \"./components/modal\";\nimport NavBar from \"./components/navbar\";\nimport Portal from \"./components/portal\";\nimport Portfolio from \"./components/portfolio\";\n\n\nfunction App({history, match }) {\n  const [openModal, setOpenModal] = useState(null);\n  useEffect(()=> {\n    const current = modals.find(item => `#${item.id}` === history.location.hash) || {};\n    setOpenModal(current)\n  }, [history, match])\n  return (\n    \n    <div className=\"page-top\" id=\"page-top\">\n      <NavBar />\n      <Portal />\n      <Portfolio />\n      <About />\n      <Copyright />\n      {openModal?.id && <Modal close={() => setOpenModal({})} current={openModal} />}\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./assets/scss/index.scss\";\nimport \"./assets/css/custom.css\"\nimport \"./assets/css/bootstrap.css\";\nimport \"./assets/css/freelancer.css\"\nimport \"./assets/css/popup.css\";\nimport \"./assets/css/swagger-ui.css\";\n\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}